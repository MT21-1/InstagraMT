

type Query {
  users: [User!]!
}

type User{
  id: String!
  email: String!
  full_name: String!
  username: String!
  password: String!
  picture: String!
  is_verified: Boolean!
  is_google_account: Boolean!
}

type PostContent{
  id: String!
  post_id: String!
  type: String!
  path: String!
}

type Post{
  id: String!
  user_id: String!
  caption: String!
  created_at: String!
  post_contents: [PostContent!]!
  post_comments: [PostComment!]!
}

type Relation{
  id: String!
  follow_id: String!
  followed_id: String!
}

type SavedPost{
  id: String!
  user_id: String!
  post_id: String!
  post_contents: [PostContent!]!
}

type TaggedPost{
  id: String!
  user_id: String!
  post_id: String!
  post_contents: [PostContent!]!
}

type LikedComment{
  id: String!
  user_id: String!
  comment_id: String!
}

type LikedPost{
  id: String!
  user_id: String!
  post_id: String!
}

type PostReply{
  id: String!
  user_id: String!
  comment_id: String!
  reply: String!
  created_at: String!
}

type LikedReply{
    id: String!
    user_id: String!
    reply_id: String!
}

type PostComment{
  id: String!
  user_id: String!
  post_id: String!
  comment: String!
  created_at: String!
  replies: [PostReply!]!
}

type Hashtag{
  id: String!
  hashtag: String!
}

type PostPagged{
  posts:[Post!]!
  nextpost:String!
  hasnext:Boolean!
}

input InputUser{
  email: String!
  full_name: String!
  username: String!
  password: String!
}

input LoginUser{
  email: String!
  password: String!
}

input VerifyEmail{
  email: String!
  token: String!
}

input updatePassword{
  token: String!
  password: String!
}

input newPost{
  content: [newPostContent]!
  caption: String!
  user_id: String!
}

input newPostContent{
  path: String!
  type: String!
}

input newRelation{
  follow_id: String!
  followed_id: String!
}

input newEditPost{
  post_id: String!
  new_caption: String!
}

input newSavedPost{
  user_id: String!
  post_id: String!
}

input newLikedPost{
  user_id: String!
  post_id: String!
}

input newComment{
  user_id: String!
  post_id: String!
  comment: String!
}

input newLikeComment{
  user_id: String!
  comment_id: String!
}

input newReply{
  user_id: String!
  comment_id: String!
  reply: String!
}

input newLikedReply{
  user_id: String!
  reply_id: String!
}

type Mutation{
  createUser(input: InputUser!): String!
  loginUser(input: LoginUser!): String!
  usernameExist(input: String!): Boolean!
  emailExist(input: String!):Boolean!
  gmailLogin(access_token: String!): String!
  isVerified(input: String!): Boolean!
  resendVerificationCode(input: String!): String!
  verifyUser(input: VerifyEmail!): String!
  sendResetPassword(input: String!): String!
  verifyResetPassword(input: updatePassword!): String!
  getUserBasedOnUsername(input: String!): User!
  getUserBasedOnEmail(input: String!): User!
  getUserBasedOnId(input: String!): User!
  getPostBasedOnUserId(input: String!): [Post!]!
  getPostBasedOnPostId(input:String!): Post!
  insertNewPost(input: newPost!): Post!
  createRelation(input: newRelation!): Relation!
  deleteRelation(input: newRelation!): Boolean!
  getFollowers(input:String!): [Relation!]!
  getFollowing(input:String!): [Relation!]!
  isFollowing(input: newRelation!): Boolean!
  searchUser(input: String!): [User!]!
  searchHashtag(input: String!): [Hashtag!]!
  
  deletePostById(input: String!): Boolean!
  editPostById(input: newEditPost!): Boolean!
  getSavedPostBasedOnUserId(input: String!): [SavedPost!]!
  getTaggedPostBasedOnUserId(input: String!): [TaggedPost!]!
  savePostById(input: newSavedPost!): Boolean!
  unsavePostById(input: newSavedPost!): Boolean!
  likePostById(input: newLikedPost!): Boolean!
  unLikePostById(input: newLikedPost!): Boolean!
  commentPost(input: newComment!): Boolean!
  deleteCommentById(input: String!):Boolean!
  likeCommentById(input: newLikeComment!): Boolean!
  unlikeCommentById(input: newLikeComment!): Boolean!
  postIsLiked(input: newLikedPost!): Boolean!
  postIsSaved(input: newSavedPost!): Boolean!
  commentIsLiked(input: newLikeComment!): Boolean!
  commentLikeCount(input: String): Int!
  postLikeCount(input: String!): Int!
  postCommentCount(input: String!): Int!

  likeReplyById(input: newLikedReply!): Boolean!
  unlikeReplyById(input: newLikedReply!): Boolean!
  postReply(input: newReply!): Boolean!
  deleteReplyById(input: String!): Boolean!
  replyIsLiked(input: newLikedReply!): Boolean!
  replyLikeCount(input: String!): Int!

  selectPostExplorePage(nextpost:String): PostPagged!

}